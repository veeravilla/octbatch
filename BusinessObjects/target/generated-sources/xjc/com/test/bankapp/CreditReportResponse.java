//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.20 at 07:11:04 PM CST 
//


package com.test.bankapp;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="ssn" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="fname" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="dob" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="score" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="noOfAccounts" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="Address" type="{http://www.test.com/bankapp}Address" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "ssn",
    "fname",
    "dob",
    "score",
    "noOfAccounts",
    "address"
})
@XmlRootElement(name = "CreditReportResponse")
public class CreditReportResponse implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected String ssn;
    @XmlElement(required = true)
    protected String fname;
    @XmlElement(required = true)
    protected String dob;
    protected int score;
    protected int noOfAccounts;
    @XmlElement(name = "Address", required = true)
    protected List<Address> address;

    /**
     * Default no-arg constructor
     * 
     */
    public CreditReportResponse() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public CreditReportResponse(final String ssn, final String fname, final String dob, final int score, final int noOfAccounts, final List<Address> address) {
        this.ssn = ssn;
        this.fname = fname;
        this.dob = dob;
        this.score = score;
        this.noOfAccounts = noOfAccounts;
        this.address = address;
    }

    /**
     * Gets the value of the ssn property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSsn() {
        return ssn;
    }

    /**
     * Sets the value of the ssn property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSsn(String value) {
        this.ssn = value;
    }

    /**
     * Gets the value of the fname property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFname() {
        return fname;
    }

    /**
     * Sets the value of the fname property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFname(String value) {
        this.fname = value;
    }

    /**
     * Gets the value of the dob property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDob() {
        return dob;
    }

    /**
     * Sets the value of the dob property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDob(String value) {
        this.dob = value;
    }

    /**
     * Gets the value of the score property.
     * 
     */
    public int getScore() {
        return score;
    }

    /**
     * Sets the value of the score property.
     * 
     */
    public void setScore(int value) {
        this.score = value;
    }

    /**
     * Gets the value of the noOfAccounts property.
     * 
     */
    public int getNoOfAccounts() {
        return noOfAccounts;
    }

    /**
     * Sets the value of the noOfAccounts property.
     * 
     */
    public void setNoOfAccounts(int value) {
        this.noOfAccounts = value;
    }

    /**
     * Gets the value of the address property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the address property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAddress().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Address }
     * 
     * 
     */
    public List<Address> getAddress() {
        if (address == null) {
            address = new ArrayList<Address>();
        }
        return this.address;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theSsn;
            theSsn = this.getSsn();
            strategy.appendField(locator, this, "ssn", buffer, theSsn);
        }
        {
            String theFname;
            theFname = this.getFname();
            strategy.appendField(locator, this, "fname", buffer, theFname);
        }
        {
            String theDob;
            theDob = this.getDob();
            strategy.appendField(locator, this, "dob", buffer, theDob);
        }
        {
            int theScore;
            theScore = this.getScore();
            strategy.appendField(locator, this, "score", buffer, theScore);
        }
        {
            int theNoOfAccounts;
            theNoOfAccounts = this.getNoOfAccounts();
            strategy.appendField(locator, this, "noOfAccounts", buffer, theNoOfAccounts);
        }
        {
            List<Address> theAddress;
            theAddress = this.getAddress();
            strategy.appendField(locator, this, "address", buffer, theAddress);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CreditReportResponse)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CreditReportResponse that = ((CreditReportResponse) object);
        {
            String lhsSsn;
            lhsSsn = this.getSsn();
            String rhsSsn;
            rhsSsn = that.getSsn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ssn", lhsSsn), LocatorUtils.property(thatLocator, "ssn", rhsSsn), lhsSsn, rhsSsn)) {
                return false;
            }
        }
        {
            String lhsFname;
            lhsFname = this.getFname();
            String rhsFname;
            rhsFname = that.getFname();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fname", lhsFname), LocatorUtils.property(thatLocator, "fname", rhsFname), lhsFname, rhsFname)) {
                return false;
            }
        }
        {
            String lhsDob;
            lhsDob = this.getDob();
            String rhsDob;
            rhsDob = that.getDob();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dob", lhsDob), LocatorUtils.property(thatLocator, "dob", rhsDob), lhsDob, rhsDob)) {
                return false;
            }
        }
        {
            int lhsScore;
            lhsScore = this.getScore();
            int rhsScore;
            rhsScore = that.getScore();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "score", lhsScore), LocatorUtils.property(thatLocator, "score", rhsScore), lhsScore, rhsScore)) {
                return false;
            }
        }
        {
            int lhsNoOfAccounts;
            lhsNoOfAccounts = this.getNoOfAccounts();
            int rhsNoOfAccounts;
            rhsNoOfAccounts = that.getNoOfAccounts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noOfAccounts", lhsNoOfAccounts), LocatorUtils.property(thatLocator, "noOfAccounts", rhsNoOfAccounts), lhsNoOfAccounts, rhsNoOfAccounts)) {
                return false;
            }
        }
        {
            List<Address> lhsAddress;
            lhsAddress = this.getAddress();
            List<Address> rhsAddress;
            rhsAddress = that.getAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "address", lhsAddress), LocatorUtils.property(thatLocator, "address", rhsAddress), lhsAddress, rhsAddress)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theSsn;
            theSsn = this.getSsn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ssn", theSsn), currentHashCode, theSsn);
        }
        {
            String theFname;
            theFname = this.getFname();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fname", theFname), currentHashCode, theFname);
        }
        {
            String theDob;
            theDob = this.getDob();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dob", theDob), currentHashCode, theDob);
        }
        {
            int theScore;
            theScore = this.getScore();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "score", theScore), currentHashCode, theScore);
        }
        {
            int theNoOfAccounts;
            theNoOfAccounts = this.getNoOfAccounts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noOfAccounts", theNoOfAccounts), currentHashCode, theNoOfAccounts);
        }
        {
            List<Address> theAddress;
            theAddress = this.getAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "address", theAddress), currentHashCode, theAddress);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof CreditReportResponse) {
            final CreditReportResponse copy = ((CreditReportResponse) draftCopy);
            if (this.ssn!= null) {
                String sourceSsn;
                sourceSsn = this.getSsn();
                String copySsn = ((String) strategy.copy(LocatorUtils.property(locator, "ssn", sourceSsn), sourceSsn));
                copy.setSsn(copySsn);
            } else {
                copy.ssn = null;
            }
            if (this.fname!= null) {
                String sourceFname;
                sourceFname = this.getFname();
                String copyFname = ((String) strategy.copy(LocatorUtils.property(locator, "fname", sourceFname), sourceFname));
                copy.setFname(copyFname);
            } else {
                copy.fname = null;
            }
            if (this.dob!= null) {
                String sourceDob;
                sourceDob = this.getDob();
                String copyDob = ((String) strategy.copy(LocatorUtils.property(locator, "dob", sourceDob), sourceDob));
                copy.setDob(copyDob);
            } else {
                copy.dob = null;
            }
            int sourceScore;
            sourceScore = this.getScore();
            int copyScore = strategy.copy(LocatorUtils.property(locator, "score", sourceScore), sourceScore);
            copy.setScore(copyScore);
            int sourceNoOfAccounts;
            sourceNoOfAccounts = this.getNoOfAccounts();
            int copyNoOfAccounts = strategy.copy(LocatorUtils.property(locator, "noOfAccounts", sourceNoOfAccounts), sourceNoOfAccounts);
            copy.setNoOfAccounts(copyNoOfAccounts);
            if ((this.address!= null)&&(!this.address.isEmpty())) {
                List<Address> sourceAddress;
                sourceAddress = this.getAddress();
                @SuppressWarnings("unchecked")
                List<Address> copyAddress = ((List<Address> ) strategy.copy(LocatorUtils.property(locator, "address", sourceAddress), sourceAddress));
                copy.address = null;
                List<Address> uniqueAddressl = copy.getAddress();
                uniqueAddressl.addAll(copyAddress);
            } else {
                copy.address = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new CreditReportResponse();
    }

}
